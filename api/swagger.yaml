basePath: /ant
definitions:
  api.LoadEnvRes:
    properties:
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
      loadEnvId:
        type: integer
      mcisId:
        type: string
      nsId:
        type: string
      pemKeyPath:
        type: string
      publicIp:
        type: string
      username:
        type: string
      vmId:
        type: string
    type: object
  api.LoadExecutionHttpRes:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      loadExecutionHttpId:
        type: integer
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  api.LoadExecutionRes:
    properties:
      duration:
        type: string
      loadEnv:
        $ref: '#/definitions/api.LoadEnvRes'
      loadExecutionConfigId:
        type: integer
      loadExecutionHttp:
        items:
          $ref: '#/definitions/api.LoadExecutionHttpRes'
        type: array
      loadExecutionState:
        $ref: '#/definitions/api.LoadExecutionStateRes'
      loadTestKey:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  api.LoadExecutionStateRes:
    properties:
      endAt:
        type: string
      executionStatus:
        $ref: '#/definitions/constant.ExecutionStatus'
      loadExecutionStateId:
        type: integer
      loadTestKey:
        type: string
      startAt:
        type: string
      totalSec:
        type: integer
    type: object
  api.LoadTestKeyReq:
    properties:
      loadTestKey:
        type: string
    type: object
  app.AntResponse-int64:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: integer
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadGeneratorInstallInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadTestExecutionInfosResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadTestExecutionInfosResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadTestExecutionStateResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadTestExecutionStateResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllMonitoringAgentInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllMonitoringAgentInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadGeneratorInstallInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadTestExecutionInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadTestExecutionInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadTestExecutionStateResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadTestExecutionStateResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_MonitoringAgentInstallationResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.MonitoringAgentInstallationResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-string:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: string
      successMessage:
        type: string
    type: object
  app.InstallLoadGeneratorReq:
    properties:
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
    type: object
  app.MonitoringAgentInstallationReq:
    properties:
      mcisId:
        type: string
      nsId:
        type: string
      vmIds:
        items:
          type: string
        type: array
    type: object
  app.RunLoadGeneratorHttpReq:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  app.RunLoadGeneratorReq:
    properties:
      agentHostname:
        type: string
      agentInstalled:
        type: boolean
      duration:
        type: string
      hostname:
        type: string
      httpReqs:
        items:
          $ref: '#/definitions/app.RunLoadGeneratorHttpReq'
        type: array
      installLoadGenerator:
        $ref: '#/definitions/app.InstallLoadGeneratorReq'
      loadGeneratorInstallInfoId:
        type: integer
      port:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  constant.ExecutionStatus:
    enum:
    - on_preparing
    - on_running
    - on_fetching
    - successed
    - test_failed
    - update_failed
    - result_failed
    - failed
    - processing
    - fetching
    - success
    type: string
    x-enum-varnames:
    - OnPreparing
    - OnRunning
    - OnFetching
    - Successed
    - TestFailed
    - UpdateFailed
    - ResultFailed
    - Failed
    - Processing
    - Fetching
    - Success
  constant.InstallLocation:
    enum:
    - local
    - remote
    type: string
    x-enum-varnames:
    - Local
    - Remote
  load.GetAllLoadGeneratorInstallInfoResult:
    properties:
      loadGeneratorInstallInfoResults:
        items:
          $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
        type: array
      totalRows:
        type: integer
    type: object
  load.GetAllLoadTestExecutionInfosResult:
    properties:
      loadTestExecutionInfos:
        items:
          $ref: '#/definitions/load.LoadTestExecutionInfoResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.GetAllLoadTestExecutionStateResult:
    properties:
      loadTestExecutionStates:
        items:
          $ref: '#/definitions/load.LoadTestExecutionStateResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.GetAllMonitoringAgentInfoResult:
    properties:
      monitoringAgentInfos:
        items:
          $ref: '#/definitions/load.MonitoringAgentInstallationResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.LoadGeneratorInstallInfoResult:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
      installPath:
        type: string
      installType:
        type: string
      installVersion:
        type: string
      loadGeneratorServers:
        items:
          $ref: '#/definitions/load.LoadGeneratorServerResult'
        type: array
      privateKeyName:
        type: string
      publicKeyName:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  load.LoadGeneratorServerResult:
    properties:
      additionalVmKey:
        type: string
      createdAt:
        type: string
      csp:
        type: string
      id:
        type: integer
      label:
        type: string
      lat:
        type: string
      lon:
        type: string
      machineType:
        type: string
      privateIp:
        type: string
      publicDns:
        type: string
      publicIp:
        type: string
      region:
        type: string
      sshPort:
        type: string
      startTime:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      vmId:
        type: string
      zone:
        type: string
    type: object
  load.LoadTestExecutionHttpInfoResult:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      id:
        type: integer
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  load.LoadTestExecutionInfoResult:
    properties:
      agentHostname:
        type: string
      agentInstalled:
        type: boolean
      compileDuration:
        type: string
      duration:
        type: string
      executionDuration:
        type: string
      hostname:
        type: string
      httpReqs:
        items:
          $ref: '#/definitions/load.LoadTestExecutionHttpInfoResult'
        type: array
      id:
        type: integer
      loadGeneratorInstallInfo:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      loadTestExecutionState:
        $ref: '#/definitions/load.LoadTestExecutionStateResult'
      loadTestKey:
        type: string
      port:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  load.LoadTestExecutionStateResult:
    properties:
      compileDuration:
        type: string
      createdAt:
        type: string
      executionDuration:
        type: string
      executionStatus:
        $ref: '#/definitions/constant.ExecutionStatus'
      failureMessage:
        type: string
      finishAt:
        type: string
      id:
        type: integer
      loadGeneratorInstallInfo:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      loadGeneratorInstallInfoId:
        type: integer
      loadTestKey:
        type: string
      startAt:
        type: string
      totalExpectedExecutionSecond:
        type: integer
      updatedAt:
        type: string
    type: object
  load.MonitoringAgentInstallationResult:
    properties:
      agentType:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      mcisId:
        type: string
      nsId:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      vmCount:
        type: integer
      vmId:
        type: string
    type: object
info:
  contact: {}
  description: CM-ANT REST API swagger document.
  title: CM-ANT REST API
  version: "0.1"
paths:
  /ant/api/v1/load/config:
    get:
      consumes:
      - application/json
      description: Get all the load test execution configurations.
      operationId: LoadExecutionConfigs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.LoadExecutionRes'
            type: array
        "500":
          description: something went wrong.try again.
          schema:
            type: string
      summary: Get all load execution config
      tags:
      - '[Load Test Configuration]'
  /ant/api/v1/load/config/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Get a load test execution config by load test key.
      operationId: LoadExecutionConfig
      parameters:
      - description: load test eky
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoadExecutionRes'
        "500":
          description: something went wrong. try again.
          schema:
            type: string
      summary: Get load execution config
      tags:
      - '[Load Test Configuration]'
  /ant/api/v1/load/result:
    get:
      consumes:
      - application/json
      description: After start load test, get the result of load test.
      operationId: LoadTestResult
      parameters:
      - description: load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      - description: format of load test result aggregate
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: loadTestKey must be passed
          schema:
            type: string
        "500":
          description: sorry, internal server error while getting load test result;
          schema:
            type: string
      summary: Get the result of single load test result
      tags:
      - '[Load Test Result]'
  /ant/api/v1/load/result/metrics:
    get:
      consumes:
      - application/json
      description: Get the result of metrics for target server.
      operationId: LoadTestMetrics
      parameters:
      - description: load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: loadTestKey must be passed
          schema:
            type: string
        "500":
          description: sorry, internal server error while getting load test result;
          schema:
            type: string
      summary: Get the result of single load test metrics
      tags:
      - '[Load Test Result]'
  /ant/api/v1/load/stop:
    post:
      consumes:
      - application/json
      description: After start load test, stop the load test by passing the load test
        key.
      operationId: StopLoadTest
      parameters:
      - description: load test key
        in: body
        name: loadTestKeyReq
        required: true
        schema:
          $ref: '#/definitions/api.LoadTestKeyReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: pass propertiesId if you want to stop test
          schema:
            type: string
        "500":
          description: sorry, internal server error while executing load test;
          schema:
            type: string
      summary: Stop load test
      tags:
      - '[Load Test Execution]'
  /api/v1/load/generators:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all installed load generators with pagination
        support.
      operationId: GetAllLoadGeneratorInstallInfo
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Generator Install Info
      tags:
      - '[Load Generator Management]'
    post:
      consumes:
      - application/json
      description: Install a load generator either locally or remotely.
      operationId: InstallLoadGenerator
      parameters:
      - description: Load Generator Installation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.InstallLoadGeneratorReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully installed load generator
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadGeneratorInstallInfoResult'
        "400":
          description: Load generator installation info is not correct.| available
            install locations are remote or local.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Install Load Generator
      tags:
      - '[Load Generator Management]'
  /api/v1/load/generators/{loadGeneratorInstallInfoId}:
    delete:
      consumes:
      - application/json
      description: Uninstall a previously installed load generator.
      operationId: UninstallLoadGenerator
      parameters:
      - description: load generator install info id
        in: path
        name: loadGeneratorInstallInfoId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uninstall load generator
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: Load generator install info id must be number.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Uninstall Load Generator
      tags:
      - '[Load Generator Management]'
  /api/v1/load/monitoring/agent/install:
    post:
      consumes:
      - application/json
      description: Install a monitoring agent on specific MCIS.
      operationId: InstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Installation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully installed monitoring agent
          schema:
            $ref: '#/definitions/app.AntResponse-load_MonitoringAgentInstallationResult'
        "400":
          description: Monitoring agent installation info is not correct.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Install Metrics Monitoring Agent
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/monitoring/agents:
    get:
      consumes:
      - application/json
      description: Retrieve monitoring agent information based on specified criteria.
      operationId: GetAllMonitoringAgentInfos
      parameters:
      - description: Namespace ID
        in: query
        name: nsId
        type: string
      - description: MCIS ID
        in: query
        name: mcisId
        type: string
      - description: VM ID
        in: query
        name: vmId
        type: string
      - description: Number of results per page
        in: query
        name: size
        type: integer
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllMonitoringAgentInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Retrieve Monitoring Agent Information
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/monitoring/agents/uninstall:
    post:
      consumes:
      - application/json
      description: Uninstall monitoring agents from specified VMs or all VMs in an
        MCIS.
      operationId: UninstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Uninstallation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Number of affected results
          schema:
            $ref: '#/definitions/app.AntResponse-int64'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Uninstall Monitoring Agents
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/tests/infos:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all load test execution information with pagination
        support.
      operationId: GetAllLoadTestExecutionInfos
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadTestExecutionInfosResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve all load test execution information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Test Execution Information
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/run:
    post:
      consumes:
      - application/json
      description: Start a load test using the provided load generator configuration.
      operationId: RunLoadTest
      parameters:
      - description: Run Load Generator Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.RunLoadGeneratorReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{loadTestKey}'
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: load generator install location is invalid.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Run Load Test
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/state:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all load test execution states with pagination
        support.
      operationId: GetAllLoadTestExecutionState
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      - description: Filter by load test key
        in: query
        name: loadTestKey
        type: string
      - description: Filter by execution status
        in: query
        name: executionStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadTestExecutionStateResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Test Execution State
      tags:
      - '[Load Test State Management]'
  /api/v1/load/tests/state/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Retrieve a load test execution state by load test key.
      operationId: GetLoadTestExecutionState
      parameters:
      - description: Load test key
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestExecutionStateResult'
        "400":
          description: Load test key must be set.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Load Test Execution State
      tags:
      - '[Load Test State Management]'
swagger: "2.0"
