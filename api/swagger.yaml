basePath: /ant
definitions:
  app.AntResponse-array_cost_GetCostInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        items:
          $ref: '#/definitions/cost.GetCostInfoResult'
        type: array
      successMessage:
        type: string
    type: object
  app.AntResponse-array_load_LoadTestStatistics:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        items:
          $ref: '#/definitions/load.LoadTestStatistics'
        type: array
      successMessage:
        type: string
    type: object
  app.AntResponse-array_load_MetricsSummary:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        items:
          $ref: '#/definitions/load.MetricsSummary'
        type: array
      successMessage:
        type: string
    type: object
  app.AntResponse-array_load_ResultSummary:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        items:
          $ref: '#/definitions/load.ResultSummary'
        type: array
      successMessage:
        type: string
    type: object
  app.AntResponse-cost_EstimateForecastCostResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/cost.EstimateForecastCostResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-cost_UpdateCostInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/cost.UpdateCostInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-int64:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: integer
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadGeneratorInstallInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadTestExecutionInfosResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadTestExecutionInfosResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadTestExecutionStateResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadTestExecutionStateResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllMonitoringAgentInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllMonitoringAgentInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadGeneratorInstallInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadTestExecutionInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadTestExecutionInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadTestExecutionStateResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadTestExecutionStateResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_MonitoringAgentInstallationResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.MonitoringAgentInstallationResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-string:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: string
      successMessage:
        type: string
    type: object
  app.AwsAdditionalInfoReq:
    properties:
      ownerId:
        type: string
      regions:
        items:
          type: string
        type: array
    type: object
  app.CostResourceReq:
    properties:
      resourceIds:
        items:
          type: string
        type: array
      resourceType:
        $ref: '#/definitions/constant.ResourceType'
    type: object
  app.EstimateForecastCostReq:
    properties:
      specs:
        items:
          properties:
            image:
              type: string
            instanceType:
              type: string
            providerName:
              type: string
            regionName:
              type: string
          required:
          - instanceType
          - providerName
          - regionName
          type: object
        type: array
      specsWithFormat:
        items:
          properties:
            commonImage:
              type: string
            commonSpec:
              type: string
          required:
          - commonSpec
          type: object
        type: array
    required:
    - specs
    - specsWithFormat
    type: object
  app.InstallLoadGeneratorReq:
    properties:
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
    type: object
  app.JsonResult:
    type: object
  app.MonitoringAgentInstallationReq:
    properties:
      mciId:
        type: string
      nsId:
        type: string
      vmIds:
        items:
          type: string
        type: array
    type: object
  app.RunLoadGeneratorHttpReq:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  app.RunLoadTestReq:
    properties:
      agentHostname:
        type: string
      agentInstalled:
        type: boolean
      duration:
        type: string
      hostname:
        type: string
      httpReqs:
        items:
          $ref: '#/definitions/app.RunLoadGeneratorHttpReq'
        type: array
      installLoadGenerator:
        $ref: '#/definitions/app.InstallLoadGeneratorReq'
      loadGeneratorInstallInfoId:
        type: integer
      port:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  app.StopLoadTestReq:
    properties:
      loadTestKey:
        type: string
    type: object
  app.UpdateCostInfoReq:
    properties:
      awsAdditionalInfo:
        $ref: '#/definitions/app.AwsAdditionalInfoReq'
      connectionName:
        type: string
      costResources:
        items:
          $ref: '#/definitions/app.CostResourceReq'
        type: array
      migrationId:
        type: string
    required:
    - connectionName
    - costResources
    type: object
  app.UpdatePriceInfosReq:
    properties:
      instanceType:
        type: string
      providerName:
        type: string
      regionName:
        type: string
    required:
    - instanceType
    - providerName
    - regionName
    type: object
  constant.ExecutionStatus:
    enum:
    - on_preparing
    - on_running
    - on_fetching
    - successed
    - test_failed
    - update_failed
    - result_failed
    - failed
    - processing
    - fetching
    - success
    type: string
    x-enum-varnames:
    - OnPreparing
    - OnRunning
    - OnFetching
    - Successed
    - TestFailed
    - UpdateFailed
    - ResultFailed
    - Failed
    - Processing
    - Fetching
    - Success
  constant.InstallLocation:
    enum:
    - local
    - remote
    type: string
    x-enum-varnames:
    - Local
    - Remote
  constant.PriceCurrency:
    enum:
    - USD
    - KRW
    type: string
    x-enum-varnames:
    - USD
    - KRW
  constant.PricePolicy:
    enum:
    - OnDemand
    type: string
    x-enum-varnames:
    - OnDemand
  constant.PriceUnit:
    enum:
    - PerHour
    - PerYear
    type: string
    x-enum-varnames:
    - PerHour
    - PerYear
  constant.ResourceType:
    enum:
    - VM
    - VNet
    - DataDisk
    - Etc
    type: string
    x-enum-varnames:
    - VM
    - VNet
    - DataDisk
    - Etc
  cost.EsimateForecastCostSpecResult:
    properties:
      estimateForecastCostSpecDetailResults:
        items:
          $ref: '#/definitions/cost.EstimateForecastCostSpecDetailResult'
        type: array
      imageName:
        type: string
      instanceType:
        type: string
      providerName:
        type: string
      regionName:
        type: string
      totalMaxMonthlyPrice:
        type: number
      totalMinMonthlyPrice:
        type: number
    type: object
  cost.EstimateForecastCostResult:
    properties:
      esimateForecastCostSpecResults:
        items:
          $ref: '#/definitions/cost.EsimateForecastCostSpecResult'
        type: array
      totalMaxMonthlyPrice:
        type: number
      totalMinMonthlyPrice:
        type: number
    type: object
  cost.EstimateForecastCostSpecDetailResult:
    properties:
      calculatedMonthlyPrice:
        type: number
      currency:
        $ref: '#/definitions/constant.PriceCurrency'
      id:
        type: integer
      lastUpdatedAt:
        type: string
      memory:
        type: string
      originalPricePolicy:
        type: string
      osType:
        type: string
      price:
        type: string
      priceDescription:
        type: string
      pricePolicy:
        $ref: '#/definitions/constant.PricePolicy'
      productDescription:
        type: string
      storage:
        type: string
      unit:
        $ref: '#/definitions/constant.PriceUnit'
      vCpu:
        type: string
    type: object
  cost.GetCostInfoResult:
    properties:
      category:
        type: string
      date:
        type: string
      provider:
        type: string
      resourceId:
        type: string
      resourceType:
        type: string
      totalCost:
        type: number
      unit:
        type: string
    type: object
  cost.UpdateCostInfoResult:
    properties:
      fetchedDataCount:
        type: integer
      insertedDataCount:
        type: integer
      updatedDataCount:
        type: integer
    type: object
  load.GetAllLoadGeneratorInstallInfoResult:
    properties:
      loadGeneratorInstallInfoResults:
        items:
          $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
        type: array
      totalRows:
        type: integer
    type: object
  load.GetAllLoadTestExecutionInfosResult:
    properties:
      loadTestExecutionInfos:
        items:
          $ref: '#/definitions/load.LoadTestExecutionInfoResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.GetAllLoadTestExecutionStateResult:
    properties:
      loadTestExecutionStates:
        items:
          $ref: '#/definitions/load.LoadTestExecutionStateResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.GetAllMonitoringAgentInfoResult:
    properties:
      monitoringAgentInfos:
        items:
          $ref: '#/definitions/load.MonitoringAgentInstallationResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.LoadGeneratorInstallInfoResult:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
      installPath:
        type: string
      installType:
        type: string
      installVersion:
        type: string
      loadGeneratorServers:
        items:
          $ref: '#/definitions/load.LoadGeneratorServerResult'
        type: array
      privateKeyName:
        type: string
      publicKeyName:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  load.LoadGeneratorServerResult:
    properties:
      additionalVmKey:
        type: string
      createdAt:
        type: string
      csp:
        type: string
      id:
        type: integer
      label:
        type: string
      lat:
        type: string
      lon:
        type: string
      machineType:
        type: string
      privateIp:
        type: string
      publicDns:
        type: string
      publicIp:
        type: string
      region:
        type: string
      sshPort:
        type: string
      startTime:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      vmId:
        type: string
      zone:
        type: string
    type: object
  load.LoadTestExecutionHttpInfoResult:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      id:
        type: integer
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  load.LoadTestExecutionInfoResult:
    properties:
      agentHostname:
        type: string
      agentInstalled:
        type: boolean
      compileDuration:
        type: string
      duration:
        type: string
      executionDuration:
        type: string
      hostname:
        type: string
      id:
        type: integer
      loadGeneratorInstallInfo:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      loadTestExecutionHttpInfos:
        items:
          $ref: '#/definitions/load.LoadTestExecutionHttpInfoResult'
        type: array
      loadTestExecutionState:
        $ref: '#/definitions/load.LoadTestExecutionStateResult'
      loadTestKey:
        type: string
      port:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  load.LoadTestExecutionStateResult:
    properties:
      compileDuration:
        type: string
      createdAt:
        type: string
      executionDuration:
        type: string
      executionStatus:
        $ref: '#/definitions/constant.ExecutionStatus'
      failureMessage:
        type: string
      finishAt:
        type: string
      id:
        type: integer
      loadGeneratorInstallInfo:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      loadGeneratorInstallInfoId:
        type: integer
      loadTestKey:
        type: string
      startAt:
        type: string
      totalExpectedExecutionSecond:
        type: integer
      updatedAt:
        type: string
    type: object
  load.LoadTestStatistics:
    properties:
      average:
        type: number
      errorPercent:
        type: number
      label:
        type: string
      maxTime:
        type: number
      median:
        type: number
      minTime:
        type: number
      ninetyFive:
        type: number
      ninetyNine:
        type: number
      ninetyPercent:
        type: number
      receivedKB:
        type: number
      requestCount:
        type: integer
      sentKB:
        type: number
      throughput:
        type: number
    type: object
  load.MetricsRawData:
    properties:
      isError:
        type: boolean
      timestamp:
        type: string
      unit:
        type: string
      value:
        type: string
    type: object
  load.MetricsSummary:
    properties:
      label:
        type: string
      metrics:
        items:
          $ref: '#/definitions/load.MetricsRawData'
        type: array
    type: object
  load.MonitoringAgentInstallationResult:
    properties:
      agentType:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      mciId:
        type: string
      nsId:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      vmCount:
        type: integer
      vmId:
        type: string
    type: object
  load.ResultRawData:
    properties:
      bytes:
        type: integer
      connection:
        description: time to establish connection
        type: integer
      elapsed:
        description: time to last byte
        type: integer
      idleTime:
        description: time not spent sampling in jmeter (milliseconds) (generally 0)
        type: integer
      isError:
        type: boolean
      latency:
        description: time to first byte
        type: integer
      "no":
        type: integer
      sentBytes:
        type: integer
      timestamp:
        type: string
      url:
        type: string
    type: object
  load.ResultSummary:
    properties:
      label:
        type: string
      results:
        items:
          $ref: '#/definitions/load.ResultRawData'
        type: array
    type: object
info:
  contact: {}
  description: CM-ANT REST API swagger document.
  title: CM-ANT REST API
  version: 0.2.2
paths:
  /api/v1/cost-estimation/forecast:
    post:
      consumes:
      - application/json
      description: Estimate the forecast cost for cloud resources based on recommended
        specifications. Requires either RecommendSpecs or RecommendSpecsWithFormat
        in the request body. Returns an error if the required properties are missing
        or if the request is invalid.
      operationId: EstimateForecastCost
      parameters:
      - description: Request body containing estimation parameters
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.EstimateForecastCostReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully estimated forecast cost
          schema:
            $ref: '#/definitions/app.AntResponse-cost_EstimateForecastCostResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to estimate forecast cost
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Estimate Forecast Cost
      tags:
      - '[Cost Estimation]'
  /api/v1/cost/info:
    get:
      consumes:
      - application/json
      description: Retrieve cost information for specified parameters within a defined
        date range. The date range must be within a 6-month period. Optionally, you
        can specify cost aggregation type and date order for the results.
      operationId: GetCostInfo
      parameters:
      - description: Start date for the cost information retrieval in 'YYYY-MM-DD'
          format
        in: query
        name: startDate
        required: true
        type: string
      - description: End date for the cost information retrieval in 'YYYY-MM-DD' format
        in: query
        name: endDate
        required: true
        type: string
      - collectionFormat: csv
        description: List of migration IDs to filter the cost information
        in: query
        items:
          type: string
        name: migrationIds
        type: array
      - collectionFormat: csv
        description: List of cloud providers to filter the cost information
        in: query
        items:
          type: string
        name: provider
        type: array
      - collectionFormat: csv
        description: List of resource types to filter the cost information
        in: query
        items:
          type: string
        name: resourceTypes
        type: array
      - collectionFormat: csv
        description: List of resource IDs to filter the cost information
        in: query
        items:
          type: string
        name: resourceIds
        type: array
      - description: Type of cost aggregation for the results (e.g., 'daily', 'weekly',
          'monthly')
        in: query
        name: costAggregationType
        required: true
        type: string
      - description: Order of dates in the result (e.g., 'asc', 'desc')
        in: query
        name: dateOrder
        type: string
      - description: Order of resource types in the result (e.g., 'asc', 'desc')
        in: query
        name: resourceTypeOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved cost information
          schema:
            $ref: '#/definitions/app.AntResponse-array_cost_GetCostInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve cost information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Cost Information
      tags:
      - '[Cost Management]'
    post:
      consumes:
      - application/json
      description: Update cost information for specified resources, including details
        such as migration ID, cost resources, and additional AWS info if applicable.
        The request body must include a valid migration ID and a list of cost resources.
        If AWS-specific details are provided, ensure all required fields are populated.
      operationId: UpdateCostInfo
      parameters:
      - description: Request body containing cost update information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.UpdateCostInfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated cost information
          schema:
            $ref: '#/definitions/app.AntResponse-cost_UpdateCostInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to update cost information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Update Cost Information
      tags:
      - '[Cost Management]'
  /api/v1/load/generators:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all installed load generators with pagination
        support.
      operationId: GetAllLoadGeneratorInstallInfo
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Generator Install Info
      tags:
      - '[Load Generator Management]'
    post:
      consumes:
      - application/json
      description: Install a load generator either locally or remotely.
      operationId: InstallLoadGenerator
      parameters:
      - description: Load Generator Installation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.InstallLoadGeneratorReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully installed load generator
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadGeneratorInstallInfoResult'
        "400":
          description: Load generator installation info is not correct.| available
            install locations are remote or local.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Install Load Generator
      tags:
      - '[Load Generator Management]'
  /api/v1/load/generators/{loadGeneratorInstallInfoId}:
    delete:
      consumes:
      - application/json
      description: Uninstall a previously installed load generator.
      operationId: UninstallLoadGenerator
      parameters:
      - description: load generator install info id
        in: path
        name: loadGeneratorInstallInfoId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uninstall load generator
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: Load generator install info id must be number.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Uninstall Load Generator
      tags:
      - '[Load Generator Management]'
  /api/v1/load/monitoring/agent/install:
    post:
      consumes:
      - application/json
      description: Install a monitoring agent on specific mci.
      operationId: InstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Installation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully installed monitoring agent
          schema:
            $ref: '#/definitions/app.AntResponse-load_MonitoringAgentInstallationResult'
        "400":
          description: Monitoring agent installation info is not correct.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Install Metrics Monitoring Agent
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/monitoring/agents:
    get:
      consumes:
      - application/json
      description: Retrieve monitoring agent information based on specified criteria.
      operationId: GetAllMonitoringAgentInfos
      parameters:
      - description: Namespace ID
        in: query
        name: nsId
        type: string
      - description: MCI ID
        in: query
        name: mciId
        type: string
      - description: VM ID
        in: query
        name: vmId
        type: string
      - description: Number of results per page
        in: query
        name: size
        type: integer
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllMonitoringAgentInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Retrieve Monitoring Agent Information
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/monitoring/agents/uninstall:
    post:
      consumes:
      - application/json
      description: Uninstall monitoring agents from specified VMs or all VMs in an
        mci.
      operationId: UninstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Uninstallation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Number of affected results
          schema:
            $ref: '#/definitions/app.AntResponse-int64'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Uninstall Monitoring Agents
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/test/metrics:
    get:
      consumes:
      - application/json
      description: Retrieve load test metrics based on provided parameters.
      operationId: GetLoadTestMetrics
      parameters:
      - description: Load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test metrics
          schema:
            $ref: '#/definitions/app.AntResponse-array_load_MetricsSummary'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test metrics
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get load test metrics
      tags:
      - '[Load Test Result]'
  /api/v1/load/test/result:
    get:
      consumes:
      - application/json
      description: Retrieve load test result based on provided parameters.
      operationId: GetLoadTestResult
      parameters:
      - description: Load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      - description: Result format (normal or aggregate)
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test metrics
          schema:
            allOf:
            - $ref: '#/definitions/app.JsonResult'
            - properties:
                '[aggregate]':
                  $ref: '#/definitions/app.AntResponse-array_load_LoadTestStatistics'
                '[normal]':
                  $ref: '#/definitions/app.AntResponse-array_load_ResultSummary'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test result
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get load test result
      tags:
      - '[Load Test Result]'
  /api/v1/load/tests/infos:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all load test execution information with pagination
        support.
      operationId: GetAllLoadTestExecutionInfos
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadTestExecutionInfosResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve all load test execution information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Test Execution Information
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/infos/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Retrieve the load test execution state information for a specific
        load test key.
      operationId: GetLoadTestExecutionInfo
      parameters:
      - description: Load test key
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestExecutionInfoResult'
        "400":
          description: Load test key must be set.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Load Test Execution State
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/run:
    post:
      consumes:
      - application/json
      description: Start a load test using the provided load test configuration.
      operationId: RunLoadTest
      parameters:
      - description: Run Load Test Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.RunLoadTestReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{loadTestKey}'
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: load test install location is invalid.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Run Load Test
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/state:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all load test execution states with pagination
        support.
      operationId: GetAllLoadTestExecutionState
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      - description: Filter by load test key
        in: query
        name: loadTestKey
        type: string
      - description: Filter by execution status
        in: query
        name: executionStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadTestExecutionStateResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Test Execution State
      tags:
      - '[Load Test State Management]'
  /api/v1/load/tests/state/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Retrieve a load test execution state by load test key.
      operationId: GetLoadTestExecutionState
      parameters:
      - description: Load test key
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestExecutionStateResult'
        "400":
          description: Load test key must be set.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Load Test Execution State
      tags:
      - '[Load Test State Management]'
  /api/v1/load/tests/stop:
    post:
      consumes:
      - application/json
      description: Stop a running load test using the provided load test key.
      operationId: StopLoadTest
      parameters:
      - description: Stop Load Test Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.StopLoadTestReq'
      produces:
      - application/json
      responses:
        "200":
          description: done
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: load test running info is not correct.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Stop Load Test
      tags:
      - '[Load Test Execution Management]'
  /api/v1/price/info:
    get:
      consumes:
      - application/json
      description: Retrieve pricing information for cloud resources based on specified
        query parameters. Returns price data based on provider, region, instance type,
        vCPU, memory, and OS type. It offer instances with the lowest monthly prices
        what in the database.
      operationId: GetPriceInfos
      parameters:
      - description: Cloud provider name - aws|alibaba|tencent|gcp|azure|ibm
        in: query
        name: providerName
        required: true
        type: string
      - description: Region name
        in: query
        name: regionName
        required: true
        type: string
      - description: Instance type
        in: query
        name: instanceType
        type: string
      - description: Number of vCPUs
        in: query
        name: vCpu
        type: string
      - description: Amount of memory
        in: query
        name: memory
        type: string
      - description: Operating system type
        in: query
        name: osType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved pricing information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve pricing information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Price Information
      tags:
      - Price Management
    post:
      consumes:
      - application/json
      description: Retrieve pricing information for cloud resources based on specified
        parameters. If saved data is more than 7 days, fetch new data and insert new
        price data even if same price as before.
      operationId: UpdatePriceInfos
      parameters:
      - description: Request body containing get price information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.UpdatePriceInfosReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved pricing information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve pricing information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      tags:
      - '[Price Management]'
  /readyz:
    get:
      consumes:
      - application/json
      description: This endpoint checks if the CB-Ant API server is ready by verifying
        the status of both the load service and the cost service. If either service
        is unavailable, it returns a 503 status indicating the server is not ready.
      operationId: AntServerReadiness
      produces:
      - application/json
      responses:
        "200":
          description: CM-Ant API server is ready
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: CB-Ant API server is not ready
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check CB-Ant API server readiness
      tags:
      - '[Server Health]'
swagger: "2.0"
