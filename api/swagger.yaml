definitions:
  api.LoadEnvReq:
    properties:
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
      mcisId:
        type: string
      nsId:
        type: string
      pemKeyPath:
        type: string
      publicIp:
        type: string
      username:
        type: string
      vmId:
        type: string
    type: object
  api.LoadEnvRes:
    properties:
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
      loadEnvId:
        type: integer
      mcisId:
        type: string
      nsId:
        type: string
      pemKeyPath:
        type: string
      publicIp:
        type: string
      username:
        type: string
      vmId:
        type: string
    type: object
  api.LoadExecutionConfigReq:
    properties:
      duration:
        type: string
      envId:
        type: string
      httpReqs:
        items:
          $ref: '#/definitions/api.LoadExecutionHttpReq'
        type: array
      loadEnvReq:
        $ref: '#/definitions/api.LoadEnvReq'
      loadTestKey:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  api.LoadExecutionHttpReq:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  api.LoadExecutionHttpRes:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      loadExecutionHttpId:
        type: integer
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  api.LoadExecutionRes:
    properties:
      duration:
        type: string
      loadEnv:
        $ref: '#/definitions/api.LoadEnvRes'
      loadExecutionConfigId:
        type: integer
      loadExecutionHttp:
        items:
          $ref: '#/definitions/api.LoadExecutionHttpRes'
        type: array
      loadExecutionState:
        $ref: '#/definitions/api.LoadExecutionStateRes'
      loadTestKey:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  api.LoadExecutionStateRes:
    properties:
      endAt:
        type: string
      executionStatus:
        $ref: '#/definitions/constant.ExecutionStatus'
      loadExecutionStateId:
        type: integer
      loadTestKey:
        type: string
      startAt:
        type: string
      totalSec:
        type: integer
    type: object
  api.LoadTestKeyReq:
    properties:
      loadTestKey:
        type: string
    type: object
  app.AntResponse-int64:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: integer
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllMonitoringAgentInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllMonitoringAgentInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_MonitoringAgentInstallationResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.MonitoringAgentInstallationResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-string:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: string
      successMessage:
        type: string
    type: object
  app.MonitoringAgentInstallationReq:
    properties:
      mcisId:
        type: string
      nsId:
        type: string
      vmIds:
        items:
          type: string
        type: array
    type: object
  constant.ExecutionStatus:
    enum:
    - processing
    - fetching
    - success
    - failed
    type: string
    x-enum-varnames:
    - Processing
    - Fetching
    - Success
    - Failed
  constant.InstallLocation:
    enum:
    - local
    - remote
    type: string
    x-enum-varnames:
    - Local
    - Remote
  load.GetAllMonitoringAgentInfoResult:
    properties:
      monitoringAgentInfos:
        items:
          $ref: '#/definitions/load.MonitoringAgentInstallationResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.MonitoringAgentInstallationResult:
    properties:
      agentType:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      mcisId:
        type: string
      nsId:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      vmCount:
        type: integer
      vmId:
        type: string
    type: object
info:
  contact: {}
paths:
  /ant/api/v1/env:
    get:
      consumes:
      - application/json
      description: Get all of the load test environments
      operationId: LoadEnvironments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.LoadEnvRes'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get the list of load test environments
      tags:
      - '[Load Test Environment]'
  /ant/api/v1/load/config:
    get:
      consumes:
      - application/json
      description: Get all the load test execution configurations.
      operationId: LoadExecutionConfigs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.LoadExecutionRes'
            type: array
        "500":
          description: something went wrong.try again.
          schema:
            type: string
      summary: Get all load execution config
      tags:
      - '[Load Test Configuration]'
  /ant/api/v1/load/config/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Get a load test execution config by load test key.
      operationId: LoadExecutionConfig
      parameters:
      - description: load test eky
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoadExecutionRes'
        "500":
          description: something went wrong. try again.
          schema:
            type: string
      summary: Get load execution config
      tags:
      - '[Load Test Configuration]'
  /ant/api/v1/load/result:
    get:
      consumes:
      - application/json
      description: After start load test, get the result of load test.
      operationId: LoadTestResult
      parameters:
      - description: load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      - description: format of load test result aggregate
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: loadTestKey must be passed
          schema:
            type: string
        "500":
          description: sorry, internal server error while getting load test result;
          schema:
            type: string
      summary: Get the result of single load test result
      tags:
      - '[Load Test Result]'
  /ant/api/v1/load/result/metrics:
    get:
      consumes:
      - application/json
      description: Get the result of metrics for target server.
      operationId: LoadTestMetrics
      parameters:
      - description: load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: loadTestKey must be passed
          schema:
            type: string
        "500":
          description: sorry, internal server error while getting load test result;
          schema:
            type: string
      summary: Get the result of single load test metrics
      tags:
      - '[Load Test Result]'
  /ant/api/v1/load/start:
    post:
      consumes:
      - application/json
      description: Start load test. Load Environment Id must be passed or Load Environment
        must be defined.
      operationId: StartLoadTest
      parameters:
      - description: load test execution configuration request
        in: body
        name: loadTestReq
        required: true
        schema:
          $ref: '#/definitions/api.LoadExecutionConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: load test environment is not correct
          schema:
            type: string
        "500":
          description: sorry, internal server error while executing load test;
          schema:
            type: string
      summary: Start load test
      tags:
      - '[Load Test Execution]'
  /ant/api/v1/load/state:
    get:
      consumes:
      - application/json
      description: Get all the load test execution state.
      operationId: LoadExecutionStates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.LoadExecutionStateRes'
            type: array
        "500":
          description: something went wrong.try again.
          schema:
            type: string
      summary: Get all load execution state
      tags:
      - '[Load Test State]'
  /ant/api/v1/load/state/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Get a load test execution state by load test key.
      operationId: LoadExecutionState
      parameters:
      - description: load test key
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoadExecutionStateRes'
        "500":
          description: something went wrong. try again.
          schema:
            type: string
      summary: Get load execution state
      tags:
      - '[Load Test State]'
  /ant/api/v1/load/stop:
    post:
      consumes:
      - application/json
      description: After start load test, stop the load test by passing the load test
        key.
      operationId: StopLoadTest
      parameters:
      - description: load test key
        in: body
        name: loadTestKeyReq
        required: true
        schema:
          $ref: '#/definitions/api.LoadTestKeyReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: pass propertiesId if you want to stop test
          schema:
            type: string
        "500":
          description: sorry, internal server error while executing load test;
          schema:
            type: string
      summary: Stop load test
      tags:
      - '[Load Test Execution]'
  /ant/api/v1/load/tester:
    post:
      consumes:
      - application/json
      description: Install load test tester in the delivered load test environment
      operationId: InstallLoadTester
      parameters:
      - description: load test environment request
        in: body
        name: loadEnvReq
        required: true
        schema:
          $ref: '#/definitions/api.LoadEnvReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: load test environment is not correct
          schema:
            type: string
        "500":
          description: sorry, internal server error while executing load test;
          schema:
            type: string
      summary: Install load test tester
      tags:
      - '[Load Test Tester]'
  /ant/api/v1/load/tester/{envId}:
    delete:
      consumes:
      - application/json
      description: Uninstall load test tester in the delivered load test environment
      operationId: UninstallLoadTester
      parameters:
      - description: load test environment id
        in: path
        name: envId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: pass me correct body;
          schema:
            type: string
        "500":
          description: something went wrong.try again.
          schema:
            type: string
      summary: Uninstall load test tester
      tags:
      - '[Load Test Tester]'
  /api/v1/load/monitoring/agent/install:
    post:
      consumes:
      - application/json
      description: Install a monitoring agent on specific MCIS.
      operationId: InstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Installation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully installed monitoring agent
          schema:
            $ref: '#/definitions/app.AntResponse-load_MonitoringAgentInstallationResult'
        "400":
          description: Monitoring agent installation info is not correct.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Install Metrics Monitoring Agent
      tags:
      - MonitoringAgentManagement
  /api/v1/load/monitoring/agents:
    get:
      consumes:
      - application/json
      description: Retrieve monitoring agent information based on specified criteria.
      operationId: GetAllMonitoringAgentInfos
      parameters:
      - description: Namespace ID
        in: query
        name: nsId
        type: string
      - description: MCIS ID
        in: query
        name: mcisId
        type: string
      - description: VM ID
        in: query
        name: vmId
        type: string
      - description: Number of results per page
        in: query
        name: size
        type: integer
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllMonitoringAgentInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Retrieve Monitoring Agent Information
      tags:
      - MonitoringAgentManagement
  /api/v1/load/monitoring/agents/uninstall:
    post:
      consumes:
      - application/json
      description: Uninstall monitoring agents from specified VMs or all VMs in an
        MCIS.
      operationId: UninstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Uninstallation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Number of affected results
          schema:
            $ref: '#/definitions/app.AntResponse-int64'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Uninstall Monitoring Agents
      tags:
      - MonitoringAgentManagement
swagger: "2.0"
